╔══════════════════════════════════════════════════════════════════╗
║     SKIPPER AI VOICE ASSISTANT - QUICK REFERENCE                ║
║     (with Klipper Face Tracking)                                 ║
╚══════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────┐
│ 🚀 QUICK START                                                   │
└─────────────────────────────────────────────────────────────────┘

  MAIN VOICE ASSISTANT (Full System):
    $ python3 main.py
    
    - Includes: LLM, STT, TTS, face tracking, mood detection
    - Face tracking starts automatically
    - Talk to robot, it follows your face while responding

  FACE TRACKING ONLY (Testing):
    $ ./start_face_tracking.sh
    $ python3 follow_face.py

  VIDEO STREAM:
    http://<pi-ip>:5000

  SERVICES CHECK:
    $ sudo systemctl status klipper moonraker ollama

┌─────────────────────────────────────────────────────────────────┐
│ ⚙️  KEY FILES                                                    │
└─────────────────────────────────────────────────────────────────┘

  VOICE ASSISTANT:
    main.py                    ← Main voice assistant loop
    config.py                  ← System configuration
    ollama_client.py           ← LLM communication
    piper_tts.py               ← Text-to-speech
    stt_backends.py            ← Speech recognition

  FACE TRACKING:
    follow_face.py             ← Standalone face tracker
    face_follow_manager.py     ← Integration with main system
    klipper_motors.py          ← Klipper motor API
    
  KLIPPER:
    ~/printer_data/config/printer.cfg  ← Motor configuration

┌─────────────────────────────────────────────────────────────────┐
│ 🔧 KEY SETTINGS                                                  │
└─────────────────────────────────────────────────────────────────┘

  VOICE ASSISTANT (config.py):
    default_model = "llama3.2"
    stt_backend = "vosk"          # or "whisper"
    piper_model = "/path/to/voice.onnx"
    robot_preset = "metallic"

  FACE TRACKING (environment vars):
    KLIPPER_URL="http://localhost:7125"
    KLIPPER_ENABLED="true"
    FF_BEHAVIOR="true"            # Enable mood detection

  TUNING (follow_face.py):
    DEADBAND_PX = 16              # Dead zone size
    K_P = 3.0                     # Tracking aggression
    SMOOTHING = 0.35              # Motion smoothness (0-1)
    MAX_RATE_HZ = 1200            # Max speed

┌─────────────────────────────────────────────────────────────────┐
│ 🧪 TESTING COMMANDS                                              │
└─────────────────────────────────────────────────────────────────┘

  Check Klipper status:
    $ curl http://localhost:7125/printer/info

  Test motor X (azimuth):
    $ curl -X POST "http://localhost:7125/printer/gcode/script?script=G0%20X10%20F3000"

  Test motor Y (altitude):
    $ curl -X POST "http://localhost:7125/printer/gcode/script?script=G0%20Y10%20F3000"

  Reset position:
    $ curl -X POST "http://localhost:7125/printer/gcode/script?script=SET_KINEMATIC_POSITION%20X=0%20Y=0"

  Disable motors:
    $ curl -X POST "http://localhost:7125/printer/gcode/script?script=M84"

┌─────────────────────────────────────────────────────────────────┐
│ 🐛 TROUBLESHOOTING                                               │
└─────────────────────────────────────────────────────────────────┘

  Klipper not responding:
    $ sudo systemctl status klipper
    $ tail -f /tmp/klippy.log

  Moonraker not responding:
    $ sudo systemctl status moonraker
    $ journalctl -u moonraker -f

  Motors not moving:
    - Check Klipper state is "ready"
    - Verify pins in printer.cfg
    - Check rotation_distance setting

  Face not detected:
    - Check lighting (needs good light)
    - Verify camera: ls /dev/video*
    - View stream to debug

  Jerky motion:
    - Increase SMOOTHING value
    - Lower K_P value
    - Increase Klipper max_accel

┌─────────────────────────────────────────────────────────────────┐
│ 📊 STATUS INDICATORS                                             │
└─────────────────────────────────────────────────────────────────┘

  Terminal output:
    ✓ Klipper motors initialized     → Success
    Face dx=+12 dy=-8 AZ:+150 Hz     → Tracking active
    No face                          → Lost target
    ERROR: Could not connect...      → Connection failure

  Klipper states:
    "ready"        → Normal operation
    "shutdown"     → Error, need restart
    "startup"      → Initializing
    "disconnected" → MCU not connected

┌─────────────────────────────────────────────────────────────────┐
│ 🎮 EXAMPLE INTERACTIONS                                          │
└─────────────────────────────────────────────────────────────────┘

  Voice Commands:
    "Hey robot, what's your status?"
    "Run diagnostics"
    "What's the temperature?"
    "Tell me a joke"
    "Execute the fan control script"

  During Conversation:
    - Robot tracks your face automatically
    - Detects your mood (via camera)
    - Responds to hand gestures
    - LED shows status (blue=thinking, cyan=speaking)
    - OLED displays transcriptions

┌─────────────────────────────────────────────────────────────────┐
│ 🎮 SYSTEM FLOW                                                   │
└─────────────────────────────────────────────────────────────────┘

  Mic → STT → LLM (+ behavior context) → TTS → Speaker
              ↑
              └─ Face Tracking (Klipper) → Mood Detection

┌─────────────────────────────────────────────────────────────────┐
│ 📋 PRINTER.CFG ESSENTIALS                                        │
└─────────────────────────────────────────────────────────────────┘

  [stepper_x]                # Azimuth (pan)
  step_pin: PF13
  dir_pin: PF12
  enable_pin: !PF14
  rotation_distance: 1.8     # deg/step (adjust for your motor)
  position_min: -180
  position_max: 180

  [stepper_y]                # Altitude (tilt)
  step_pin: PG0
  dir_pin: !PG1
  enable_pin: !PF15
  rotation_distance: 1.8
  position_min: -90
  position_max: 90

  [force_move]
  enable_force_move: True

  [printer]
  kinematics: none           # Not using 3D printer kinematics
  max_velocity: 300
  max_accel: 3000

┌─────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION                                                 │
└─────────────────────────────────────────────────────────────────┘

  KLIPPER_SETUP.md      → Full setup guide
  MIGRATION_SUMMARY.md  → What changed from GPIO
  printer.cfg.example   → Sample Klipper config
  README.md             → Project overview

┌─────────────────────────────────────────────────────────────────┐
│ 🔐 SAFETY                                                        │
└─────────────────────────────────────────────────────────────────┘

  Emergency stop:       Ctrl+C or M112 command
  Auto-disable:         Motors disable after 2s idle
  Position limits:      Set in printer.cfg to prevent damage
  Power off:            Always power off when not in use

┌─────────────────────────────────────────────────────────────────┐
│ 💡 TIPS                                                          │
└─────────────────────────────────────────────────────────────────┘

  • Start with conservative settings, tune gradually
  • Use web stream to debug face detection issues
  • Check Klipper logs if motors behave unexpectedly
  • Test individual axes before running full tracking
  • Good lighting is critical for face detection
  • Motors will auto-disable when idle to save power

╔══════════════════════════════════════════════════════════════════╗
║  For help: See KLIPPER_SETUP.md or check system logs            ║
╚══════════════════════════════════════════════════════════════════╝
